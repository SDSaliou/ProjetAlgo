/*Leap Year Checker: Create a function that takes a year as input and determines whether it is a leap year or not. Leap years are divisible by 4, but not by 100 unless they are also divisible by 400.
*/
FUNCTION Year(year : INTEGER) : STRING

BEGIN
    IF ((year MOD 4=0 AND year MOD 100!=0) OR (year MOD 400=0)) THEN
        RETURN year & 'is a leap year.';
    ELSE
        RETURN year & 'is not a leap year.';
    END_IF
END
/*Ticket Pricing: Write a program that prompts the user to enter their age and then determines the price of a movie ticket based on the following criteria:

Children (age <= 12): $10
Teenagers (age 13-17): $15
Adults (age >= 18): $20*/
FUNCTION TicketPrice(age : INTEGER) : STRING

BEGIN  
    IF (age<=12) THEN
        RETURN 'Ticket price is $10';
    ELSE_IF (age>=13 AND age<=17) THEN
        RETURN 'Ticket price is $15';
    ELSE_IF (age>=18) THEN
        RETURN 'Ticket price is $20';
    ELSE 
        RETURN 'Invalid age';
    END_IF
END

//Power Function: Write a recursive function to calculate the result of raising a number to a given power.

FUNCTION pow(base, exponent: INTEGER) : INTEGER

BEGIN
    IF (exponent = 0) THEN
        RETURN 1;
    ELSE
        RETURN base * pow(base, exponent - 1);
    END_IF
END

//Fibonacci Sequence: Implement a recursive function to generate the nth Fibonacci number. The Fibonacci sequence starts with 0 and 1, and each subsequent number is the sum of the two preceding numbers (0, 1, 1, 2, 3, 5, 8, ...).

FUNCTION fibbonacci(n: INTEGER) : INTEGER

BEGIN
    IF (n = 0) THEN
        RETURN 0;
    ELSE_IF (n=1)THEN
        RETURN 1
    ELSE
        RETURN fibbonacci(n-1)+ fibbonacci(n-2);
    END_IF
END

